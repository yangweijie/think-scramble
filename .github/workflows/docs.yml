name: Deploy Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'README.md'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'README.md'

# 设置 GITHUB_TOKEN 权限
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许一个并发部署
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 构建文档
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install -g docsify-cli
          
      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Prepare documentation
        run: |
          # 创建构建目录
          mkdir -p _site
          
          # 复制文档文件
          cp -r docs/* _site/
          
          # 复制 README 到 docs 目录作为主页
          cp README.md _site/README.md
          
          # 创建 .nojekyll 文件以禁用 Jekyll
          touch _site/.nojekyll
          
          # 验证关键文件存在
          ls -la _site/
          
      - name: Validate documentation
        run: |
          # 检查必要文件
          if [ ! -f "_site/index.html" ]; then
            echo "Error: index.html not found"
            exit 1
          fi
          
          if [ ! -f "_site/_sidebar.md" ]; then
            echo "Error: _sidebar.md not found"
            exit 1
          fi
          
          if [ ! -f "_site/README.md" ]; then
            echo "Error: README.md not found"
            exit 1
          fi
          
          echo "Documentation validation passed"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  # 部署到 GitHub Pages
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # 测试部署的文档
  test:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Test deployed documentation
        run: |
          # 等待部署完成
          sleep 30
          
          # 测试主页
          curl -f -s -o /dev/null "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/" || {
            echo "Failed to access documentation homepage"
            exit 1
          }
          
          echo "Documentation is accessible"

  # 通知部署结果
  notify:
    runs-on: ubuntu-latest
    needs: [build, deploy, test]
    if: always() && github.ref == 'refs/heads/main'
    steps:
      - name: Notify deployment status
        run: |
          if [ "${{ needs.deploy.result }}" == "success" ] && [ "${{ needs.test.result }}" == "success" ]; then
            echo "✅ Documentation deployed successfully!"
            echo "📚 Visit: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
          else
            echo "❌ Documentation deployment failed"
            echo "Build: ${{ needs.build.result }}"
            echo "Deploy: ${{ needs.deploy.result }}"
            echo "Test: ${{ needs.test.result }}"
          fi
